#!/usr/bin/perl -w

use strict;
use warnings;

print "/* Generated by symbol_table.pl */\n";
print "\n";
print "#include <protura/symbols.h>\n";
print "\n";

print "const struct symbol kernel_symbols[] = {\n";
foreach my $line (<STDIN>) {
    chomp($line);
    my @str = split(' ', $line);
    my $len = scalar @str;

    my $sym_addr = $str[0];
    my $sym_name;
    my $sym_len;

    # Symbol has no length
    if ($len eq 3) {
        $sym_name = $str[2];
        $sym_len = 0;
    } else {
        $sym_name = $str[3];
        $sym_len = $str[1];
    }

    # Don't output a symbol for the table, it will only appear in the second
    # pass which makes the ending kernel_symbols's table one entry bigger than
    # the second
    if ($sym_name eq "kernel_symbols") {
        next;
    }

    print "    { .addr = 0x$sym_addr, .size = 0x$sym_len, .name = \"$sym_name\" },\n";
}
print "    { .addr = 0, .size = 0, .name = NULL }\n";
print "};\n";
